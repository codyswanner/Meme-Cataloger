# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  db:
    build:
      context: ./MySqlDockerSetup
    restart: always
    user: root
    secrets:
      - db-password
      - django-db-password
    volumes:
      - db-data:/var/lib/mysql
    # environment:
      # MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db-password
      # MYSQL_USER: django
      # MYSQL_PASSWORD_FILE: /run/secrets/django-db-password
    healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
        interval: 10s
        timeout: 10s
        retries: 3
    expose:
      - 3306:3306

  redis:
    image: redis:7
    ports:
     - 6379:6379

  server:
    build:
      context: .
    volumes:
        - ./Frontend/src:/home/appuser/Frontend/src:rshared
        - ./MemeCataloger2:/home/appuser/MemeCataloger2:rshared
        - ./api:/home/appuser/api:rshared
        - ./Sockets:/home/appuser/Sockets:rshared

    ports:
      - 8000:8000
    depends_on:
        db:
            condition: service_healthy

volumes:
    db-data:
    server-frontend-src:
    server-memecataloger2:
    server-api:
    server-sockets:

secrets:
  db-password:
    file: ./MySqlDockerSetup/db-password.txt
  django-db-password:
    file: ./MySqlDockerSetup/django-db-password.txt
